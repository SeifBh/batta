<?php

namespace EspritEntreAide\SpottedBundle\Repository;

/**
 * PublicationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PublicationRepository extends \Doctrine\ORM\EntityRepository
{
    public function countAllPublication(){
        return $this->createQueryBuilder('a')
            ->select('COUNT(a)')
            ->getQuery()
            ->getSingleScalarResult();
    }
    public function countAllPublicationSecrete($id){
        return $this->createQueryBuilder('a')
            ->select('COUNT(a)')
            ->where('a.idUser = :id')
            ->andWhere('a.image is not  null ')
            ->setParameter('id',  $id )

            ->getQuery()
            ->getSingleScalarResult();
    }
    public function countAllPublicationImage($id){
        return $this->createQueryBuilder('a')
            ->select('COUNT(a)')
            ->where('a.idUser = :id')
            ->andWhere('a.image is  null ')
            ->setParameter('id',  $id )

            ->getQuery()
            ->getSingleScalarResult();
    }



    public function countAllPublicationSecrete2(){
        return $this->createQueryBuilder('a')
            ->select('COUNT(a)')

            ->where('a.image is   null ')


            ->getQuery()
            ->getSingleScalarResult();
    }
    public function countAllPublicationImage2()
    {
        return $this->createQueryBuilder('a')
            ->select('COUNT(a)')

            ->where('a.image is not null ')


            ->getQuery()
            ->getSingleScalarResult();
    }




    public  function rechercheAjax($ser){
       return $this->createQueryBuilder('o')
           ->where('o.descP LIKE  :ser')
            ->setParameter('ser', '%' . $ser . '%')
            ->getQuery()
            ->getResult();
    }

    public  function newposts($mdate){
        return $this->createQueryBuilder('o')
            ->where('o.dateP > :mdate')
            ->setParameter('mdate', $mdate)
            ->getQuery()
            ->getResult();
    }

    public function findS()
    {
        return $this->createQueryBuilder('o')
            ->orderBy('o.dateP', 'DESC')

            ->getQuery()
            ->setMaxResults(5)

            ->getResult();




    }

    public  function texto(){
        return $this->createQueryBuilder('o')
            ->where("o.descP != 'image'")
            ->getQuery()
            ->getResult();
    }

    public  function imageT(){
        return $this->createQueryBuilder('o')
            ->where("o.descP LIKE 'image'")
            ->getQuery()
            ->getResult();
    }
}
